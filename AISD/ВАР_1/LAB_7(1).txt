//#include "stdafx.h" разкоменть если что подйет не так
#include<iostream>
#include<string>
#include<conio.h>
#include<time.h>
#include<windows.h>

using namespace std;

struct Date//структура описывающаю дату
{
	int day;//день
	int mounth;//месяц
	int year;//год
};

class Order//класс описывающий заказ
{
public:
	int number;//номер заказа
	string mark;//марка
	string name;//имя
	Date last;//дата последниго ремонта
	Date end;//дата конца ремоннта

	Order() {

	}

	Order(string mark, string name)//конуструктор для инициализации данных класса
	{
		this->mark = mark;
		this->name = name;
		this->number = rand() % 100;
	}
};

Order orders[1000];//массив заказов
int len = 0;//кол-во заказов

void showMenu()//функция для вывода меню
{
	system("cls");
	cout << "===Выберети пункт===" << endl;
	cout << "1.Вывести заказы" << endl;
	cout << "2.Ввести заказы" << endl;
	cout << "3.Заполнить случайно" << endl;
	cout << "4.Сортировать по именам" << endl;
	cout << "5.Выход" << endl;
}

void inputSize()//функция ввода кол-ва заказов
{
	cout << "Введите кол-во заказов: ";
	cin >> len;
}

void outputOrder()//функция для вывода заказов
{
	cout << "---ЗАКАЗЫ---" << endl;
	for (int i = 0; i < len; i++)
	{
		cout << endl;
		cout << "-= № " << orders[i].number << endl;
		cout << "Имя: " << orders[i].name << "   Марка: " << orders[i].mark << endl;
		cout << "Послдений ремнонт: " << orders[i].last.day << " " << orders[i].last.mounth << " " << orders[i].last.year << endl;
		cout << "Конец ремнонт: " << orders[i].end.day << " " << orders[i].end.mounth << " " << orders[i].end.year << endl;
		cout << endl;
	}
	system("pause");
}

Date randomtDate()//функция которая возращает случаюную дату
{
	Date date;

	date.day = rand() % 31 + 1;
	date.mounth = rand() % 12 + 1;
	date.year = rand() % 18 + 2000;

	return date;
}

void inputOrder()//функция ввода и заполения массива заказов
{
	inputSize();

	for (int i = 0; i < len; i++)
	{
		string name, mark;
		Date l, e;

		cout << "Введите заказ №" << i + 1 << endl;
		cout << "Имя = ";
		cin >> name;
		cout << "Марка = ";
		cin >> mark;
		l = randomtDate();
		e = randomtDate();

		Order tmp(mark, name);
		tmp.end = e;
		tmp.last = l;

		orders[i] = tmp;
	}
}

void randomOrder()//функция для случайного заполенения массива заказов
{
	inputSize();

	for (int i = 0; i < len; i++)
	{
		string name, mark;
		Date l, e;

		name = "Имя_" + to_string(rand() % len);
		mark = "Марка_" + to_string(rand() % len);

		if (rand() % 2 == 1)
			mark = "Жигули";

		l = randomtDate();
		e = randomtDate();

		Order tmp(mark, name);
		tmp.end = e;
		tmp.last = l;

		orders[i] = tmp;
	}
	system("pause");
}

void sortOrder()//функция сортировки заказов(взято из премеров с сайта)
{
	cout << "Сортировка..." << endl;

	int i, j;
	Order k;

	for (j = 1; j < len; j++)
	{
		k = orders[j];
		i = j - 1;
		while (k.name < orders[i].name && i >= 0)
		{
			orders[i + 1] = orders[i];
			i -= 1;
		}
		orders[i + 1] = k;
	}

	system("pause");
}

int main()
{
	srand(time(NULL));

	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	//логика меню
	int choose = 0;
	while (choose != 5)
	{
		showMenu();
		cin >> choose;
		switch (choose)
		{
		case 1: outputOrder(); break;
		case 2: inputOrder(); break;
		case 3: randomOrder(); break;
		case 4: sortOrder(); break;
		default: cout << "Ошибка ввода" << endl; break;
		}
	}

	system("pause");
	return 1;
}