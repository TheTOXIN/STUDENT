#include <iostream>
#include <string>
#include <math.h>
#include <locale.h>
#include <windows.h>
#include <time.h>

using namespace std;

class Matrix//класс матрица
{
public://у каждой матрицы есть
	int matr[100][100];//двумерный массив
	int h;//высота
	int w;//ширина
	string name;//название
				//ОБЪЕВЛЯЕМ функции и конструктор
	Matrix(int h, int w, string name);//конструктор
	friend ostream& operator <<(ostream& out, Matrix& m);//вывод мтарицы
	friend Matrix& operator %(Matrix m1, Matrix m2);//процент матриц
	friend boolean operator ==(Matrix m1, Matrix m2);//проверка матриц на равенство
	friend void operator +=(Matrix& m, int n);//увелечение матрицы на число
private:
	const int maxSize = 100;//максимальный размер матрицы
protected:
};

Matrix::Matrix(int h, int w, string name)//конструктор для создание матрицы
{	//присваиваем передоваемые данные
	this->h = h;
	this->w = w;
	this->name = name;
	//заполняем матрицу случаными элементами через два вложенных цикла
	for (int i = 0; i < h; i++)
	{
		for (int j = 0; j < w; j++)
		{
			this->matr[i][j] = rand() % 100;
		}
	}
}

ostream& operator <<(ostream& out, Matrix& m)//реализуем функцию вывода матрицы
{
	out << "Матрица - " << m.name << endl;
	for (int i = 0; i < m.h; i++)
	{
		for (int j = 0; j < m.w; j++)
		{
			out.width(4);
			out << m.matr[i][j];
		}
		out << endl;
	}
	return out;
}

Matrix& operator %(Matrix m1, Matrix m2)//реализуем функцию процента двух матриц
{
	if (m1.h != m2.h && m1.w != m2.w)
	{
		cout << "Матрицы разного размера..." << endl;
	}

	Matrix m(m1.h, m2.w, ("M" + to_string(rand() % 100)));

	for (int i = 0; i < m.h; i++)
	{
		for (int j = 0; j < m.w; j++)
		{
			m.matr[i][j] = m1.matr[i][j] % m2.matr[i][j];
		}
	}

	return m;
}

boolean operator ==(Matrix m1, Matrix m2)//функция для проверки матриц на равенство
{
	if (m1.h != m2.h && m1.w != m2.w)
	{
		cout << "Матрицы разного размера..." << endl;
		return false;
	}

	for (int i = 0; i < m1.h; i++)
	{
		for (int j = 0; j < m1.w; j++)
		{
			if (m1.matr[i][j] != m2.matr[i][j])
			{
				return false;
			}
		}
	}
	return true;
}

void operator +=(Matrix& m, int n)//функция для увелечения матрицы на число
{
	for (int i = 0; i < m.h; i++)
	{
		for (int j = 0; j < m.w; j++)
		{
			m.matr[i][j] += n;
		}
	}
}

int main()
{
	srand(time(NULL));
	setlocale(0, "RUS");

	//создаем 2 матрицы
	Matrix a(4, 3, "A");
	Matrix b(4, 3, "B");
	//выводим их
	cout << a;
	cout << b;

	//сравниваем матрицы и выводим результат
	(a == b) ? cout << "A == B" << endl : cout << "A != B" << endl;
	b += 2;// увеличиваем матрицу b на 2

	Matrix c = a % b;//берем процент матриц и создаем новую
	c.name = "C";
	//опять выводим все матрицы
	cout << a;
	cout << b;
	cout << c;

	system("pause");
	return 0;
}
