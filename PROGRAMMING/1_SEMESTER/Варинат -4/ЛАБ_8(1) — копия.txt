#include "stdafx.h"
#include <iostream>
#include <math.h>
#include <locale.h>
#include <windows.h>
#include <time.h>

using namespace std;

int* X; //указатель для динамичсекого массива который будет содержать координаты X наших точек
int* Y; //тоже самое для Y
int N;  //N бдует хранить количество точек

void search_perimetr()//функция для поиска наибоьшего периметра треугольника из трёх точек
{
	double P = 0; // бдует содержать текущей периметр
	double max_P = 0; // будет содержать наибольший периметр
	int X1, X2, X3;// здесть будут координаты X треугольника с наибольшим периметром
	int Y1, Y2, Y3;// здесть будут координаты Y треугольника с наибольшим периметром
	for (int i = 0; i < N; i++)//цикл для взятия первой точки
	{
		for (int j = i+1; j < N; j++)//цикл для второй точки
		{
			for (int k = j+1; k < N; k++)//цикл для третей точки
			{
				double AB = sqrt(fabs(pow(X[i] - X[j], 2) - pow(Y[i] - Y[j], 2)));//вычесляем расстояние между двумя точками (1-2) по формуле
				double BC = sqrt(fabs(pow(X[j] - X[k], 2) - pow(Y[j] - Y[k], 2)));//вычесляем расстояние между двумя точками (2-3) по формуле
				double CA = sqrt(fabs(pow(X[k] - X[i], 2) - pow(Y[k] - Y[i], 2)));//вычесляем расстояние между двумя точками (3-1) по формуле
				P += AB + BC + CA;//складываем наши расстояния в периметр
				if (P >= max_P)//если он больше чем максиальный периметр
				{
					max_P = P;//то делайем его нашим новым максимальным перемитром
					X1 = X[i], X2 = X[j], X3 = X[k];//и соохраняем координта триугольника
					Y1 = Y[i], Y2 = Y[j], Y3 = Y[k];
				}
			}
		}
	}
	cout << "Точки составляющие треугольник с наибольшим периметром:" << endl;
	cout << "X: " << X1 << ' ' << X2 << ' ' << X3 << endl;
	cout << "Y: " << Y1 << ' ' << Y2 << ' ' << Y3 << endl;
	cout << "P = " << max_P << endl;
}

void generate_points()//функция для создания точек
{
	cout << "Введите количество точек: " << endl;
	cin >> N;
	X = new int[N];//делаем два динамических массива размером N который мы ввели
	Y = new int[N];
	
	for (int i = 0; i < N; i++)//через цикл добавляем случайные элементы в массивы координат X и Y
	{
		X[i] = rand() % 18 - 9;/*добавляем случайную координату в X c помощью функцию rand()%18 которая возращает случайное число 
		Y[i] = rand() % 18 - 9; до 18  и мы отнимем от этого числа , таким образом у нас будут координаты от -9 до 9*/
	}
}

void output_points()//функция для вывода точек
{
	cout << "Координаты точек" << endl << "N: ";
	for (int i = 0; i < N; i++)//через цикл выводим номера точек (ну так чтобы красиво было)
	{
		cout.width(2);//делаем отступ
		cout << i+1 << ' ';
	}
	cout << endl;
	cout << "X: ";
	for (int i = 0; i < N; i++)//выводим координаты X через цикл
	{
		cout.width(2);//отступ
		cout << X[i] << ' ';
	}
	cout << endl;
	cout << "Y: ";
	for (int i = 0; i < N; i++)//выводим координаты Y через цикл
	{
		cout.width(2);//отступ
		cout << Y[i] << ' ';
	}
	cout << endl;
}

int main()
{
	setlocale(LC_ALL, "Rus");
	srand((unsigned)time(NULL));//для работы функции rand()

	generate_points();//вызываем функцию для создания точек
	output_points();//вызываем функцию для вывода точек в консоль
	search_perimetr();//вызываем функцию для поиска наибольшего периметра треугольника 

	system("pause");
	return 0;
}